#!/usr/bin/env python3
NAME = "pawn_promotion"

import json
import sys
import os

# Read world from stdin
world = json.loads(sys.stdin.read())

# Check the last move to see if it was a pawn move
if not world["move_history"]:
    print(json.dumps(world))
    sys.exit(9)  # No changes

last_move = world["move_history"][-1]
# Check if it was a pawn move (starts with P)
if not last_move.startswith("P"):
    print(json.dumps(world))
    sys.exit(9)  # No changes

# Get the destination square
to_notation = last_move.split("-")[1].split("x")[0]
to_file = ord(to_notation[0]) - ord('a')
to_rank = 8 - int(to_notation[1])

# Check if pawn reached the last rank
last_rank_white = 0
last_rank_black = 7

board = world["board"]
piece = board[to_rank][to_file]
is_white_pawn = piece == "WP"
is_black_pawn = piece == "BP"

if (is_white_pawn and to_rank == last_rank_white) or (is_black_pawn and to_rank == last_rank_black):
    # Get the command player for automated promotion
    player = os.environ.get("PLAYER", "unknown")
    
    # Automatically promote to Queen for now
    # A more interactive implementation could use a 'promote' command
    if is_white_pawn:
        board[to_rank][to_file] = "WQ"
    else:
        board[to_rank][to_file] = "BQ"
    
    # Add promotion info to the move history
    world["move_history"][-1] += "=Q"
    print(f"Pawn promoted to Queen", file=sys.stderr)
    
    # Output the updated world
    print(json.dumps(world))
    sys.exit(0)  # Changes made
else:
    # No promotion needed
    print(json.dumps(world))
    sys.exit(9)  # No changes